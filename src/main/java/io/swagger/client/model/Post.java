/*
 * Mattermost API Reference
 * ### API version 4 is stable with the Mattermost server 4.0 release. API version 3 is scheduled for deprecation on January 16th, 2018. [Details here](/#tag/APIv3-Deprecation). Looking for the APIv3 reference? It has moved [here](https://api.mattermost.com/v3). 
 *
 * OpenAPI spec version: 4.0.0
 * Contact: feedback@mattermost.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Post
 */

public class Post {
  @SerializedName("channel_id")
  private String channelId = null;

  @SerializedName("message")
  private String message = null;

  @SerializedName("root_id")
  private String rootId = null;

  @SerializedName("file_ids")
  private List<String> fileIds = null;

  @SerializedName("props")
  private String props = null;

  public Post channelId(String channelId) {
    this.channelId = channelId;
    return this;
  }

   /**
   * The channel ID to post in
   * @return channelId
  **/
  @ApiModelProperty(required = true, value = "The channel ID to post in")
  public String getChannelId() {
    return channelId;
  }

  public void setChannelId(String channelId) {
    this.channelId = channelId;
  }

  public Post message(String message) {
    this.message = message;
    return this;
  }

   /**
   * The message contents, can be formatted with Markdown
   * @return message
  **/
  @ApiModelProperty(required = true, value = "The message contents, can be formatted with Markdown")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public Post rootId(String rootId) {
    this.rootId = rootId;
    return this;
  }

   /**
   * The post ID to comment on
   * @return rootId
  **/
  @ApiModelProperty(value = "The post ID to comment on")
  public String getRootId() {
    return rootId;
  }

  public void setRootId(String rootId) {
    this.rootId = rootId;
  }

  public Post fileIds(List<String> fileIds) {
    this.fileIds = fileIds;
    return this;
  }

  public Post addFileIdsItem(String fileIdsItem) {
    if (this.fileIds == null) {
      this.fileIds = new ArrayList<String>();
    }
    this.fileIds.add(fileIdsItem);
    return this;
  }

   /**
   * A list of file IDs to associate with the post
   * @return fileIds
  **/
  @ApiModelProperty(value = "A list of file IDs to associate with the post")
  public List<String> getFileIds() {
    return fileIds;
  }

  public void setFileIds(List<String> fileIds) {
    this.fileIds = fileIds;
  }

  public Post props(String props) {
    this.props = props;
    return this;
  }

   /**
   * A general JSON property bag to attach to the post
   * @return props
  **/
  @ApiModelProperty(value = "A general JSON property bag to attach to the post")
  public String getProps() {
    return props;
  }

  public void setProps(String props) {
    this.props = props;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Post post = (Post) o;
    return Objects.equals(this.channelId, post.channelId) &&
        Objects.equals(this.message, post.message) &&
        Objects.equals(this.rootId, post.rootId) &&
        Objects.equals(this.fileIds, post.fileIds) &&
        Objects.equals(this.props, post.props);
  }

  @Override
  public int hashCode() {
    return Objects.hash(channelId, message, rootId, fileIds, props);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Post {\n");
    
    sb.append("    channelId: ").append(toIndentedString(channelId)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    rootId: ").append(toIndentedString(rootId)).append("\n");
    sb.append("    fileIds: ").append(toIndentedString(fileIds)).append("\n");
    sb.append("    props: ").append(toIndentedString(props)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

