/*
 * Mattermost API Reference
 * ### API version 4 is stable with the Mattermost server 4.0 release. API version 3 is scheduled for deprecation on January 16th, 2018. [Details here](/#tag/APIv3-Deprecation). Looking for the APIv3 reference? It has moved [here](https://api.mattermost.com/v3). 
 *
 * OpenAPI spec version: 4.0.0
 * Contact: feedback@mattermost.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Body36
 */

public class Body36 {
  @SerializedName("team_id")
  private String teamId = null;

  @SerializedName("channel_id")
  private String channelId = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("display_name")
  private String displayName = null;

  @SerializedName("trigger_words")
  private List<String> triggerWords = new ArrayList<String>();

  @SerializedName("trigger_when")
  private Integer triggerWhen = null;

  @SerializedName("callback_urls")
  private List<String> callbackUrls = new ArrayList<String>();

  @SerializedName("content_type")
  private String contentType = "application/x-www-form-urlencoded";

  public Body36 teamId(String teamId) {
    this.teamId = teamId;
    return this;
  }

   /**
   * The ID of the team that the webhook watchs
   * @return teamId
  **/
  @ApiModelProperty(required = true, value = "The ID of the team that the webhook watchs")
  public String getTeamId() {
    return teamId;
  }

  public void setTeamId(String teamId) {
    this.teamId = teamId;
  }

  public Body36 channelId(String channelId) {
    this.channelId = channelId;
    return this;
  }

   /**
   * The ID of a public channel that the webhook watchs
   * @return channelId
  **/
  @ApiModelProperty(value = "The ID of a public channel that the webhook watchs")
  public String getChannelId() {
    return channelId;
  }

  public void setChannelId(String channelId) {
    this.channelId = channelId;
  }

  public Body36 description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The description for this outgoing webhook
   * @return description
  **/
  @ApiModelProperty(value = "The description for this outgoing webhook")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Body36 displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * The display name for this outgoing webhook
   * @return displayName
  **/
  @ApiModelProperty(required = true, value = "The display name for this outgoing webhook")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public Body36 triggerWords(List<String> triggerWords) {
    this.triggerWords = triggerWords;
    return this;
  }

  public Body36 addTriggerWordsItem(String triggerWordsItem) {
    this.triggerWords.add(triggerWordsItem);
    return this;
  }

   /**
   * List of words for the webhook to trigger on
   * @return triggerWords
  **/
  @ApiModelProperty(required = true, value = "List of words for the webhook to trigger on")
  public List<String> getTriggerWords() {
    return triggerWords;
  }

  public void setTriggerWords(List<String> triggerWords) {
    this.triggerWords = triggerWords;
  }

  public Body36 triggerWhen(Integer triggerWhen) {
    this.triggerWhen = triggerWhen;
    return this;
  }

   /**
   * When to trigger the webhook, &#x60;0&#x60; when a trigger word is present at all and &#x60;1&#x60; if the message starts with a trigger word
   * @return triggerWhen
  **/
  @ApiModelProperty(value = "When to trigger the webhook, `0` when a trigger word is present at all and `1` if the message starts with a trigger word")
  public Integer getTriggerWhen() {
    return triggerWhen;
  }

  public void setTriggerWhen(Integer triggerWhen) {
    this.triggerWhen = triggerWhen;
  }

  public Body36 callbackUrls(List<String> callbackUrls) {
    this.callbackUrls = callbackUrls;
    return this;
  }

  public Body36 addCallbackUrlsItem(String callbackUrlsItem) {
    this.callbackUrls.add(callbackUrlsItem);
    return this;
  }

   /**
   * The URLs to POST the payloads to when the webhook is triggered
   * @return callbackUrls
  **/
  @ApiModelProperty(required = true, value = "The URLs to POST the payloads to when the webhook is triggered")
  public List<String> getCallbackUrls() {
    return callbackUrls;
  }

  public void setCallbackUrls(List<String> callbackUrls) {
    this.callbackUrls = callbackUrls;
  }

  public Body36 contentType(String contentType) {
    this.contentType = contentType;
    return this;
  }

   /**
   * The format to POST the data in, either &#x60;application/json&#x60; or &#x60;application/x-www-form-urlencoded&#x60;
   * @return contentType
  **/
  @ApiModelProperty(value = "The format to POST the data in, either `application/json` or `application/x-www-form-urlencoded`")
  public String getContentType() {
    return contentType;
  }

  public void setContentType(String contentType) {
    this.contentType = contentType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Body36 body36 = (Body36) o;
    return Objects.equals(this.teamId, body36.teamId) &&
        Objects.equals(this.channelId, body36.channelId) &&
        Objects.equals(this.description, body36.description) &&
        Objects.equals(this.displayName, body36.displayName) &&
        Objects.equals(this.triggerWords, body36.triggerWords) &&
        Objects.equals(this.triggerWhen, body36.triggerWhen) &&
        Objects.equals(this.callbackUrls, body36.callbackUrls) &&
        Objects.equals(this.contentType, body36.contentType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(teamId, channelId, description, displayName, triggerWords, triggerWhen, callbackUrls, contentType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Body36 {\n");
    
    sb.append("    teamId: ").append(toIndentedString(teamId)).append("\n");
    sb.append("    channelId: ").append(toIndentedString(channelId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    triggerWords: ").append(toIndentedString(triggerWords)).append("\n");
    sb.append("    triggerWhen: ").append(toIndentedString(triggerWhen)).append("\n");
    sb.append("    callbackUrls: ").append(toIndentedString(callbackUrls)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

