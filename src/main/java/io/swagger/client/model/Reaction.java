/*
 * Mattermost API Reference
 * ### API version 4 is stable with the Mattermost server 4.0 release. API version 3 is scheduled for deprecation on January 16th, 2018. [Details here](/#tag/APIv3-Deprecation). Looking for the APIv3 reference? It has moved [here](https://api.mattermost.com/v3). 
 *
 * OpenAPI spec version: 4.0.0
 * Contact: feedback@mattermost.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Reaction
 */

public class Reaction {
  @SerializedName("user_id")
  private String userId = null;

  @SerializedName("post_id")
  private String postId = null;

  @SerializedName("emoji_name")
  private String emojiName = null;

  @SerializedName("create_at")
  private Integer createAt = null;

  public Reaction userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * The ID of the user that made this reaction
   * @return userId
  **/
  @ApiModelProperty(value = "The ID of the user that made this reaction")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public Reaction postId(String postId) {
    this.postId = postId;
    return this;
  }

   /**
   * The ID of the post to which this reaction was made
   * @return postId
  **/
  @ApiModelProperty(value = "The ID of the post to which this reaction was made")
  public String getPostId() {
    return postId;
  }

  public void setPostId(String postId) {
    this.postId = postId;
  }

  public Reaction emojiName(String emojiName) {
    this.emojiName = emojiName;
    return this;
  }

   /**
   * The name of the emoji that was used for this reaction
   * @return emojiName
  **/
  @ApiModelProperty(value = "The name of the emoji that was used for this reaction")
  public String getEmojiName() {
    return emojiName;
  }

  public void setEmojiName(String emojiName) {
    this.emojiName = emojiName;
  }

  public Reaction createAt(Integer createAt) {
    this.createAt = createAt;
    return this;
  }

   /**
   * The time at which this reaction was made
   * @return createAt
  **/
  @ApiModelProperty(value = "The time at which this reaction was made")
  public Integer getCreateAt() {
    return createAt;
  }

  public void setCreateAt(Integer createAt) {
    this.createAt = createAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Reaction reaction = (Reaction) o;
    return Objects.equals(this.userId, reaction.userId) &&
        Objects.equals(this.postId, reaction.postId) &&
        Objects.equals(this.emojiName, reaction.emojiName) &&
        Objects.equals(this.createAt, reaction.createAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, postId, emojiName, createAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Reaction {\n");
    
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    postId: ").append(toIndentedString(postId)).append("\n");
    sb.append("    emojiName: ").append(toIndentedString(emojiName)).append("\n");
    sb.append("    createAt: ").append(toIndentedString(createAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

