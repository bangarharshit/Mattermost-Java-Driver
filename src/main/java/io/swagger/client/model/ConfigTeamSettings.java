/*
 * Mattermost API Reference
 * ### API version 4 is stable with the Mattermost server 4.0 release. API version 3 is scheduled for deprecation on January 16th, 2018. [Details here](/#tag/APIv3-Deprecation). Looking for the APIv3 reference? It has moved [here](https://api.mattermost.com/v3). 
 *
 * OpenAPI spec version: 4.0.0
 * Contact: feedback@mattermost.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ConfigTeamSettings
 */

public class ConfigTeamSettings {
  @SerializedName("SiteName")
  private String siteName = null;

  @SerializedName("MaxUsersPerTeam")
  private Integer maxUsersPerTeam = null;

  @SerializedName("EnableTeamCreation")
  private Boolean enableTeamCreation = null;

  @SerializedName("EnableUserCreation")
  private Boolean enableUserCreation = null;

  @SerializedName("EnableOpenServer")
  private Boolean enableOpenServer = null;

  @SerializedName("RestrictCreationToDomains")
  private String restrictCreationToDomains = null;

  @SerializedName("EnableCustomBrand")
  private Boolean enableCustomBrand = null;

  @SerializedName("CustomBrandText")
  private String customBrandText = null;

  @SerializedName("CustomDescriptionText")
  private String customDescriptionText = null;

  @SerializedName("RestrictDirectMessage")
  private String restrictDirectMessage = null;

  @SerializedName("RestrictTeamInvite")
  private String restrictTeamInvite = null;

  @SerializedName("RestrictPublicChannelManagement")
  private String restrictPublicChannelManagement = null;

  @SerializedName("RestrictPrivateChannelManagement")
  private String restrictPrivateChannelManagement = null;

  @SerializedName("RestrictPublicChannelCreation")
  private String restrictPublicChannelCreation = null;

  @SerializedName("RestrictPrivateChannelCreation")
  private String restrictPrivateChannelCreation = null;

  @SerializedName("RestrictPublicChannelDeletion")
  private String restrictPublicChannelDeletion = null;

  @SerializedName("RestrictPrivateChannelDeletion")
  private String restrictPrivateChannelDeletion = null;

  @SerializedName("UserStatusAwayTimeout")
  private Integer userStatusAwayTimeout = null;

  @SerializedName("MaxChannelsPerTeam")
  private Integer maxChannelsPerTeam = null;

  @SerializedName("MaxNotificationsPerChannel")
  private Integer maxNotificationsPerChannel = null;

  public ConfigTeamSettings siteName(String siteName) {
    this.siteName = siteName;
    return this;
  }

   /**
   * Get siteName
   * @return siteName
  **/
  @ApiModelProperty(value = "")
  public String getSiteName() {
    return siteName;
  }

  public void setSiteName(String siteName) {
    this.siteName = siteName;
  }

  public ConfigTeamSettings maxUsersPerTeam(Integer maxUsersPerTeam) {
    this.maxUsersPerTeam = maxUsersPerTeam;
    return this;
  }

   /**
   * Get maxUsersPerTeam
   * @return maxUsersPerTeam
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxUsersPerTeam() {
    return maxUsersPerTeam;
  }

  public void setMaxUsersPerTeam(Integer maxUsersPerTeam) {
    this.maxUsersPerTeam = maxUsersPerTeam;
  }

  public ConfigTeamSettings enableTeamCreation(Boolean enableTeamCreation) {
    this.enableTeamCreation = enableTeamCreation;
    return this;
  }

   /**
   * Get enableTeamCreation
   * @return enableTeamCreation
  **/
  @ApiModelProperty(value = "")
  public Boolean isEnableTeamCreation() {
    return enableTeamCreation;
  }

  public void setEnableTeamCreation(Boolean enableTeamCreation) {
    this.enableTeamCreation = enableTeamCreation;
  }

  public ConfigTeamSettings enableUserCreation(Boolean enableUserCreation) {
    this.enableUserCreation = enableUserCreation;
    return this;
  }

   /**
   * Get enableUserCreation
   * @return enableUserCreation
  **/
  @ApiModelProperty(value = "")
  public Boolean isEnableUserCreation() {
    return enableUserCreation;
  }

  public void setEnableUserCreation(Boolean enableUserCreation) {
    this.enableUserCreation = enableUserCreation;
  }

  public ConfigTeamSettings enableOpenServer(Boolean enableOpenServer) {
    this.enableOpenServer = enableOpenServer;
    return this;
  }

   /**
   * Get enableOpenServer
   * @return enableOpenServer
  **/
  @ApiModelProperty(value = "")
  public Boolean isEnableOpenServer() {
    return enableOpenServer;
  }

  public void setEnableOpenServer(Boolean enableOpenServer) {
    this.enableOpenServer = enableOpenServer;
  }

  public ConfigTeamSettings restrictCreationToDomains(String restrictCreationToDomains) {
    this.restrictCreationToDomains = restrictCreationToDomains;
    return this;
  }

   /**
   * Get restrictCreationToDomains
   * @return restrictCreationToDomains
  **/
  @ApiModelProperty(value = "")
  public String getRestrictCreationToDomains() {
    return restrictCreationToDomains;
  }

  public void setRestrictCreationToDomains(String restrictCreationToDomains) {
    this.restrictCreationToDomains = restrictCreationToDomains;
  }

  public ConfigTeamSettings enableCustomBrand(Boolean enableCustomBrand) {
    this.enableCustomBrand = enableCustomBrand;
    return this;
  }

   /**
   * Get enableCustomBrand
   * @return enableCustomBrand
  **/
  @ApiModelProperty(value = "")
  public Boolean isEnableCustomBrand() {
    return enableCustomBrand;
  }

  public void setEnableCustomBrand(Boolean enableCustomBrand) {
    this.enableCustomBrand = enableCustomBrand;
  }

  public ConfigTeamSettings customBrandText(String customBrandText) {
    this.customBrandText = customBrandText;
    return this;
  }

   /**
   * Get customBrandText
   * @return customBrandText
  **/
  @ApiModelProperty(value = "")
  public String getCustomBrandText() {
    return customBrandText;
  }

  public void setCustomBrandText(String customBrandText) {
    this.customBrandText = customBrandText;
  }

  public ConfigTeamSettings customDescriptionText(String customDescriptionText) {
    this.customDescriptionText = customDescriptionText;
    return this;
  }

   /**
   * Get customDescriptionText
   * @return customDescriptionText
  **/
  @ApiModelProperty(value = "")
  public String getCustomDescriptionText() {
    return customDescriptionText;
  }

  public void setCustomDescriptionText(String customDescriptionText) {
    this.customDescriptionText = customDescriptionText;
  }

  public ConfigTeamSettings restrictDirectMessage(String restrictDirectMessage) {
    this.restrictDirectMessage = restrictDirectMessage;
    return this;
  }

   /**
   * Get restrictDirectMessage
   * @return restrictDirectMessage
  **/
  @ApiModelProperty(value = "")
  public String getRestrictDirectMessage() {
    return restrictDirectMessage;
  }

  public void setRestrictDirectMessage(String restrictDirectMessage) {
    this.restrictDirectMessage = restrictDirectMessage;
  }

  public ConfigTeamSettings restrictTeamInvite(String restrictTeamInvite) {
    this.restrictTeamInvite = restrictTeamInvite;
    return this;
  }

   /**
   * Get restrictTeamInvite
   * @return restrictTeamInvite
  **/
  @ApiModelProperty(value = "")
  public String getRestrictTeamInvite() {
    return restrictTeamInvite;
  }

  public void setRestrictTeamInvite(String restrictTeamInvite) {
    this.restrictTeamInvite = restrictTeamInvite;
  }

  public ConfigTeamSettings restrictPublicChannelManagement(String restrictPublicChannelManagement) {
    this.restrictPublicChannelManagement = restrictPublicChannelManagement;
    return this;
  }

   /**
   * Get restrictPublicChannelManagement
   * @return restrictPublicChannelManagement
  **/
  @ApiModelProperty(value = "")
  public String getRestrictPublicChannelManagement() {
    return restrictPublicChannelManagement;
  }

  public void setRestrictPublicChannelManagement(String restrictPublicChannelManagement) {
    this.restrictPublicChannelManagement = restrictPublicChannelManagement;
  }

  public ConfigTeamSettings restrictPrivateChannelManagement(String restrictPrivateChannelManagement) {
    this.restrictPrivateChannelManagement = restrictPrivateChannelManagement;
    return this;
  }

   /**
   * Get restrictPrivateChannelManagement
   * @return restrictPrivateChannelManagement
  **/
  @ApiModelProperty(value = "")
  public String getRestrictPrivateChannelManagement() {
    return restrictPrivateChannelManagement;
  }

  public void setRestrictPrivateChannelManagement(String restrictPrivateChannelManagement) {
    this.restrictPrivateChannelManagement = restrictPrivateChannelManagement;
  }

  public ConfigTeamSettings restrictPublicChannelCreation(String restrictPublicChannelCreation) {
    this.restrictPublicChannelCreation = restrictPublicChannelCreation;
    return this;
  }

   /**
   * Get restrictPublicChannelCreation
   * @return restrictPublicChannelCreation
  **/
  @ApiModelProperty(value = "")
  public String getRestrictPublicChannelCreation() {
    return restrictPublicChannelCreation;
  }

  public void setRestrictPublicChannelCreation(String restrictPublicChannelCreation) {
    this.restrictPublicChannelCreation = restrictPublicChannelCreation;
  }

  public ConfigTeamSettings restrictPrivateChannelCreation(String restrictPrivateChannelCreation) {
    this.restrictPrivateChannelCreation = restrictPrivateChannelCreation;
    return this;
  }

   /**
   * Get restrictPrivateChannelCreation
   * @return restrictPrivateChannelCreation
  **/
  @ApiModelProperty(value = "")
  public String getRestrictPrivateChannelCreation() {
    return restrictPrivateChannelCreation;
  }

  public void setRestrictPrivateChannelCreation(String restrictPrivateChannelCreation) {
    this.restrictPrivateChannelCreation = restrictPrivateChannelCreation;
  }

  public ConfigTeamSettings restrictPublicChannelDeletion(String restrictPublicChannelDeletion) {
    this.restrictPublicChannelDeletion = restrictPublicChannelDeletion;
    return this;
  }

   /**
   * Get restrictPublicChannelDeletion
   * @return restrictPublicChannelDeletion
  **/
  @ApiModelProperty(value = "")
  public String getRestrictPublicChannelDeletion() {
    return restrictPublicChannelDeletion;
  }

  public void setRestrictPublicChannelDeletion(String restrictPublicChannelDeletion) {
    this.restrictPublicChannelDeletion = restrictPublicChannelDeletion;
  }

  public ConfigTeamSettings restrictPrivateChannelDeletion(String restrictPrivateChannelDeletion) {
    this.restrictPrivateChannelDeletion = restrictPrivateChannelDeletion;
    return this;
  }

   /**
   * Get restrictPrivateChannelDeletion
   * @return restrictPrivateChannelDeletion
  **/
  @ApiModelProperty(value = "")
  public String getRestrictPrivateChannelDeletion() {
    return restrictPrivateChannelDeletion;
  }

  public void setRestrictPrivateChannelDeletion(String restrictPrivateChannelDeletion) {
    this.restrictPrivateChannelDeletion = restrictPrivateChannelDeletion;
  }

  public ConfigTeamSettings userStatusAwayTimeout(Integer userStatusAwayTimeout) {
    this.userStatusAwayTimeout = userStatusAwayTimeout;
    return this;
  }

   /**
   * Get userStatusAwayTimeout
   * @return userStatusAwayTimeout
  **/
  @ApiModelProperty(value = "")
  public Integer getUserStatusAwayTimeout() {
    return userStatusAwayTimeout;
  }

  public void setUserStatusAwayTimeout(Integer userStatusAwayTimeout) {
    this.userStatusAwayTimeout = userStatusAwayTimeout;
  }

  public ConfigTeamSettings maxChannelsPerTeam(Integer maxChannelsPerTeam) {
    this.maxChannelsPerTeam = maxChannelsPerTeam;
    return this;
  }

   /**
   * Get maxChannelsPerTeam
   * @return maxChannelsPerTeam
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxChannelsPerTeam() {
    return maxChannelsPerTeam;
  }

  public void setMaxChannelsPerTeam(Integer maxChannelsPerTeam) {
    this.maxChannelsPerTeam = maxChannelsPerTeam;
  }

  public ConfigTeamSettings maxNotificationsPerChannel(Integer maxNotificationsPerChannel) {
    this.maxNotificationsPerChannel = maxNotificationsPerChannel;
    return this;
  }

   /**
   * Get maxNotificationsPerChannel
   * @return maxNotificationsPerChannel
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxNotificationsPerChannel() {
    return maxNotificationsPerChannel;
  }

  public void setMaxNotificationsPerChannel(Integer maxNotificationsPerChannel) {
    this.maxNotificationsPerChannel = maxNotificationsPerChannel;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfigTeamSettings configTeamSettings = (ConfigTeamSettings) o;
    return Objects.equals(this.siteName, configTeamSettings.siteName) &&
        Objects.equals(this.maxUsersPerTeam, configTeamSettings.maxUsersPerTeam) &&
        Objects.equals(this.enableTeamCreation, configTeamSettings.enableTeamCreation) &&
        Objects.equals(this.enableUserCreation, configTeamSettings.enableUserCreation) &&
        Objects.equals(this.enableOpenServer, configTeamSettings.enableOpenServer) &&
        Objects.equals(this.restrictCreationToDomains, configTeamSettings.restrictCreationToDomains) &&
        Objects.equals(this.enableCustomBrand, configTeamSettings.enableCustomBrand) &&
        Objects.equals(this.customBrandText, configTeamSettings.customBrandText) &&
        Objects.equals(this.customDescriptionText, configTeamSettings.customDescriptionText) &&
        Objects.equals(this.restrictDirectMessage, configTeamSettings.restrictDirectMessage) &&
        Objects.equals(this.restrictTeamInvite, configTeamSettings.restrictTeamInvite) &&
        Objects.equals(this.restrictPublicChannelManagement, configTeamSettings.restrictPublicChannelManagement) &&
        Objects.equals(this.restrictPrivateChannelManagement, configTeamSettings.restrictPrivateChannelManagement) &&
        Objects.equals(this.restrictPublicChannelCreation, configTeamSettings.restrictPublicChannelCreation) &&
        Objects.equals(this.restrictPrivateChannelCreation, configTeamSettings.restrictPrivateChannelCreation) &&
        Objects.equals(this.restrictPublicChannelDeletion, configTeamSettings.restrictPublicChannelDeletion) &&
        Objects.equals(this.restrictPrivateChannelDeletion, configTeamSettings.restrictPrivateChannelDeletion) &&
        Objects.equals(this.userStatusAwayTimeout, configTeamSettings.userStatusAwayTimeout) &&
        Objects.equals(this.maxChannelsPerTeam, configTeamSettings.maxChannelsPerTeam) &&
        Objects.equals(this.maxNotificationsPerChannel, configTeamSettings.maxNotificationsPerChannel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(siteName, maxUsersPerTeam, enableTeamCreation, enableUserCreation, enableOpenServer, restrictCreationToDomains, enableCustomBrand, customBrandText, customDescriptionText, restrictDirectMessage, restrictTeamInvite, restrictPublicChannelManagement, restrictPrivateChannelManagement, restrictPublicChannelCreation, restrictPrivateChannelCreation, restrictPublicChannelDeletion, restrictPrivateChannelDeletion, userStatusAwayTimeout, maxChannelsPerTeam, maxNotificationsPerChannel);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfigTeamSettings {\n");
    
    sb.append("    siteName: ").append(toIndentedString(siteName)).append("\n");
    sb.append("    maxUsersPerTeam: ").append(toIndentedString(maxUsersPerTeam)).append("\n");
    sb.append("    enableTeamCreation: ").append(toIndentedString(enableTeamCreation)).append("\n");
    sb.append("    enableUserCreation: ").append(toIndentedString(enableUserCreation)).append("\n");
    sb.append("    enableOpenServer: ").append(toIndentedString(enableOpenServer)).append("\n");
    sb.append("    restrictCreationToDomains: ").append(toIndentedString(restrictCreationToDomains)).append("\n");
    sb.append("    enableCustomBrand: ").append(toIndentedString(enableCustomBrand)).append("\n");
    sb.append("    customBrandText: ").append(toIndentedString(customBrandText)).append("\n");
    sb.append("    customDescriptionText: ").append(toIndentedString(customDescriptionText)).append("\n");
    sb.append("    restrictDirectMessage: ").append(toIndentedString(restrictDirectMessage)).append("\n");
    sb.append("    restrictTeamInvite: ").append(toIndentedString(restrictTeamInvite)).append("\n");
    sb.append("    restrictPublicChannelManagement: ").append(toIndentedString(restrictPublicChannelManagement)).append("\n");
    sb.append("    restrictPrivateChannelManagement: ").append(toIndentedString(restrictPrivateChannelManagement)).append("\n");
    sb.append("    restrictPublicChannelCreation: ").append(toIndentedString(restrictPublicChannelCreation)).append("\n");
    sb.append("    restrictPrivateChannelCreation: ").append(toIndentedString(restrictPrivateChannelCreation)).append("\n");
    sb.append("    restrictPublicChannelDeletion: ").append(toIndentedString(restrictPublicChannelDeletion)).append("\n");
    sb.append("    restrictPrivateChannelDeletion: ").append(toIndentedString(restrictPrivateChannelDeletion)).append("\n");
    sb.append("    userStatusAwayTimeout: ").append(toIndentedString(userStatusAwayTimeout)).append("\n");
    sb.append("    maxChannelsPerTeam: ").append(toIndentedString(maxChannelsPerTeam)).append("\n");
    sb.append("    maxNotificationsPerChannel: ").append(toIndentedString(maxNotificationsPerChannel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

