/*
 * Mattermost API Reference
 * ### API version 4 is stable with the Mattermost server 4.0 release. API version 3 is scheduled for deprecation on January 16th, 2018. [Details here](/#tag/APIv3-Deprecation). Looking for the APIv3 reference? It has moved [here](https://api.mattermost.com/v3). 
 *
 * OpenAPI spec version: 4.0.0
 * Contact: feedback@mattermost.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * UserNotifyProps
 */

public class UserNotifyProps {
  @SerializedName("email")
  private String email = null;

  @SerializedName("push")
  private String push = null;

  @SerializedName("desktop")
  private String desktop = null;

  @SerializedName("desktop_sound")
  private String desktopSound = null;

  @SerializedName("mention_keys")
  private String mentionKeys = null;

  @SerializedName("channel")
  private String channel = null;

  @SerializedName("first_name")
  private String firstName = null;

  public UserNotifyProps email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Set to \&quot;true\&quot; to enable email notifications, \&quot;false\&quot; to disable. Defaults to \&quot;true\&quot;.
   * @return email
  **/
  @ApiModelProperty(value = "Set to \"true\" to enable email notifications, \"false\" to disable. Defaults to \"true\".")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public UserNotifyProps push(String push) {
    this.push = push;
    return this;
  }

   /**
   * Set to \&quot;all\&quot; to receive push notifications for all activity, \&quot;mention\&quot; for mentions and direct messages only, and \&quot;none\&quot; to disable. Defaults to \&quot;mention\&quot;.
   * @return push
  **/
  @ApiModelProperty(value = "Set to \"all\" to receive push notifications for all activity, \"mention\" for mentions and direct messages only, and \"none\" to disable. Defaults to \"mention\".")
  public String getPush() {
    return push;
  }

  public void setPush(String push) {
    this.push = push;
  }

  public UserNotifyProps desktop(String desktop) {
    this.desktop = desktop;
    return this;
  }

   /**
   * Set to \&quot;all\&quot; to receive desktop notifications for all activity, \&quot;mention\&quot; for mentions and direct messages only, and \&quot;none\&quot; to disable. Defaults to \&quot;all\&quot;.
   * @return desktop
  **/
  @ApiModelProperty(value = "Set to \"all\" to receive desktop notifications for all activity, \"mention\" for mentions and direct messages only, and \"none\" to disable. Defaults to \"all\".")
  public String getDesktop() {
    return desktop;
  }

  public void setDesktop(String desktop) {
    this.desktop = desktop;
  }

  public UserNotifyProps desktopSound(String desktopSound) {
    this.desktopSound = desktopSound;
    return this;
  }

   /**
   * Set to \&quot;true\&quot; to enable sound on desktop notifications, \&quot;false\&quot; to disable. Defaults to \&quot;true\&quot;.
   * @return desktopSound
  **/
  @ApiModelProperty(value = "Set to \"true\" to enable sound on desktop notifications, \"false\" to disable. Defaults to \"true\".")
  public String getDesktopSound() {
    return desktopSound;
  }

  public void setDesktopSound(String desktopSound) {
    this.desktopSound = desktopSound;
  }

  public UserNotifyProps mentionKeys(String mentionKeys) {
    this.mentionKeys = mentionKeys;
    return this;
  }

   /**
   * A comma-separated list of words to count as mentions. Defaults to username and @username.
   * @return mentionKeys
  **/
  @ApiModelProperty(value = "A comma-separated list of words to count as mentions. Defaults to username and @username.")
  public String getMentionKeys() {
    return mentionKeys;
  }

  public void setMentionKeys(String mentionKeys) {
    this.mentionKeys = mentionKeys;
  }

  public UserNotifyProps channel(String channel) {
    this.channel = channel;
    return this;
  }

   /**
   * Set to \&quot;true\&quot; to enable channel-wide notifications (@channel, @all, etc.), \&quot;false\&quot; to disable. Defaults to \&quot;true\&quot;.
   * @return channel
  **/
  @ApiModelProperty(value = "Set to \"true\" to enable channel-wide notifications (@channel, @all, etc.), \"false\" to disable. Defaults to \"true\".")
  public String getChannel() {
    return channel;
  }

  public void setChannel(String channel) {
    this.channel = channel;
  }

  public UserNotifyProps firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * Set to \&quot;true\&quot; to enable mentions for first name. Defaults to \&quot;true\&quot; if a first name is set, \&quot;false\&quot; otherwise.
   * @return firstName
  **/
  @ApiModelProperty(value = "Set to \"true\" to enable mentions for first name. Defaults to \"true\" if a first name is set, \"false\" otherwise.")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserNotifyProps userNotifyProps = (UserNotifyProps) o;
    return Objects.equals(this.email, userNotifyProps.email) &&
        Objects.equals(this.push, userNotifyProps.push) &&
        Objects.equals(this.desktop, userNotifyProps.desktop) &&
        Objects.equals(this.desktopSound, userNotifyProps.desktopSound) &&
        Objects.equals(this.mentionKeys, userNotifyProps.mentionKeys) &&
        Objects.equals(this.channel, userNotifyProps.channel) &&
        Objects.equals(this.firstName, userNotifyProps.firstName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(email, push, desktop, desktopSound, mentionKeys, channel, firstName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserNotifyProps {\n");
    
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    push: ").append(toIndentedString(push)).append("\n");
    sb.append("    desktop: ").append(toIndentedString(desktop)).append("\n");
    sb.append("    desktopSound: ").append(toIndentedString(desktopSound)).append("\n");
    sb.append("    mentionKeys: ").append(toIndentedString(mentionKeys)).append("\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

