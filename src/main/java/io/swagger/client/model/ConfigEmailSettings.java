/*
 * Mattermost API Reference
 * ### API version 4 is stable with the Mattermost server 4.0 release. API version 3 is scheduled for deprecation on January 16th, 2018. [Details here](/#tag/APIv3-Deprecation). Looking for the APIv3 reference? It has moved [here](https://api.mattermost.com/v3). 
 *
 * OpenAPI spec version: 4.0.0
 * Contact: feedback@mattermost.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ConfigEmailSettings
 */

public class ConfigEmailSettings {
  @SerializedName("EnableSignUpWithEmail")
  private Boolean enableSignUpWithEmail = null;

  @SerializedName("EnableSignInWithEmail")
  private Boolean enableSignInWithEmail = null;

  @SerializedName("EnableSignInWithUsername")
  private Boolean enableSignInWithUsername = null;

  @SerializedName("SendEmailNotifications")
  private Boolean sendEmailNotifications = null;

  @SerializedName("RequireEmailVerification")
  private Boolean requireEmailVerification = null;

  @SerializedName("FeedbackName")
  private String feedbackName = null;

  @SerializedName("FeedbackEmail")
  private String feedbackEmail = null;

  @SerializedName("FeedbackOrganization")
  private String feedbackOrganization = null;

  @SerializedName("SMTPUsername")
  private String smTPUsername = null;

  @SerializedName("SMTPPassword")
  private String smTPPassword = null;

  @SerializedName("SMTPServer")
  private String smTPServer = null;

  @SerializedName("SMTPPort")
  private String smTPPort = null;

  @SerializedName("ConnectionSecurity")
  private String connectionSecurity = null;

  @SerializedName("InviteSalt")
  private String inviteSalt = null;

  @SerializedName("PasswordResetSalt")
  private String passwordResetSalt = null;

  @SerializedName("SendPushNotifications")
  private Boolean sendPushNotifications = null;

  @SerializedName("PushNotificationServer")
  private String pushNotificationServer = null;

  @SerializedName("PushNotificationContents")
  private String pushNotificationContents = null;

  @SerializedName("EnableEmailBatching")
  private Boolean enableEmailBatching = null;

  @SerializedName("EmailBatchingBufferSize")
  private Integer emailBatchingBufferSize = null;

  @SerializedName("EmailBatchingInterval")
  private Integer emailBatchingInterval = null;

  public ConfigEmailSettings enableSignUpWithEmail(Boolean enableSignUpWithEmail) {
    this.enableSignUpWithEmail = enableSignUpWithEmail;
    return this;
  }

   /**
   * Get enableSignUpWithEmail
   * @return enableSignUpWithEmail
  **/
  @ApiModelProperty(value = "")
  public Boolean isEnableSignUpWithEmail() {
    return enableSignUpWithEmail;
  }

  public void setEnableSignUpWithEmail(Boolean enableSignUpWithEmail) {
    this.enableSignUpWithEmail = enableSignUpWithEmail;
  }

  public ConfigEmailSettings enableSignInWithEmail(Boolean enableSignInWithEmail) {
    this.enableSignInWithEmail = enableSignInWithEmail;
    return this;
  }

   /**
   * Get enableSignInWithEmail
   * @return enableSignInWithEmail
  **/
  @ApiModelProperty(value = "")
  public Boolean isEnableSignInWithEmail() {
    return enableSignInWithEmail;
  }

  public void setEnableSignInWithEmail(Boolean enableSignInWithEmail) {
    this.enableSignInWithEmail = enableSignInWithEmail;
  }

  public ConfigEmailSettings enableSignInWithUsername(Boolean enableSignInWithUsername) {
    this.enableSignInWithUsername = enableSignInWithUsername;
    return this;
  }

   /**
   * Get enableSignInWithUsername
   * @return enableSignInWithUsername
  **/
  @ApiModelProperty(value = "")
  public Boolean isEnableSignInWithUsername() {
    return enableSignInWithUsername;
  }

  public void setEnableSignInWithUsername(Boolean enableSignInWithUsername) {
    this.enableSignInWithUsername = enableSignInWithUsername;
  }

  public ConfigEmailSettings sendEmailNotifications(Boolean sendEmailNotifications) {
    this.sendEmailNotifications = sendEmailNotifications;
    return this;
  }

   /**
   * Get sendEmailNotifications
   * @return sendEmailNotifications
  **/
  @ApiModelProperty(value = "")
  public Boolean isSendEmailNotifications() {
    return sendEmailNotifications;
  }

  public void setSendEmailNotifications(Boolean sendEmailNotifications) {
    this.sendEmailNotifications = sendEmailNotifications;
  }

  public ConfigEmailSettings requireEmailVerification(Boolean requireEmailVerification) {
    this.requireEmailVerification = requireEmailVerification;
    return this;
  }

   /**
   * Get requireEmailVerification
   * @return requireEmailVerification
  **/
  @ApiModelProperty(value = "")
  public Boolean isRequireEmailVerification() {
    return requireEmailVerification;
  }

  public void setRequireEmailVerification(Boolean requireEmailVerification) {
    this.requireEmailVerification = requireEmailVerification;
  }

  public ConfigEmailSettings feedbackName(String feedbackName) {
    this.feedbackName = feedbackName;
    return this;
  }

   /**
   * Get feedbackName
   * @return feedbackName
  **/
  @ApiModelProperty(value = "")
  public String getFeedbackName() {
    return feedbackName;
  }

  public void setFeedbackName(String feedbackName) {
    this.feedbackName = feedbackName;
  }

  public ConfigEmailSettings feedbackEmail(String feedbackEmail) {
    this.feedbackEmail = feedbackEmail;
    return this;
  }

   /**
   * Get feedbackEmail
   * @return feedbackEmail
  **/
  @ApiModelProperty(value = "")
  public String getFeedbackEmail() {
    return feedbackEmail;
  }

  public void setFeedbackEmail(String feedbackEmail) {
    this.feedbackEmail = feedbackEmail;
  }

  public ConfigEmailSettings feedbackOrganization(String feedbackOrganization) {
    this.feedbackOrganization = feedbackOrganization;
    return this;
  }

   /**
   * Get feedbackOrganization
   * @return feedbackOrganization
  **/
  @ApiModelProperty(value = "")
  public String getFeedbackOrganization() {
    return feedbackOrganization;
  }

  public void setFeedbackOrganization(String feedbackOrganization) {
    this.feedbackOrganization = feedbackOrganization;
  }

  public ConfigEmailSettings smTPUsername(String smTPUsername) {
    this.smTPUsername = smTPUsername;
    return this;
  }

   /**
   * Get smTPUsername
   * @return smTPUsername
  **/
  @ApiModelProperty(value = "")
  public String getSmTPUsername() {
    return smTPUsername;
  }

  public void setSmTPUsername(String smTPUsername) {
    this.smTPUsername = smTPUsername;
  }

  public ConfigEmailSettings smTPPassword(String smTPPassword) {
    this.smTPPassword = smTPPassword;
    return this;
  }

   /**
   * Get smTPPassword
   * @return smTPPassword
  **/
  @ApiModelProperty(value = "")
  public String getSmTPPassword() {
    return smTPPassword;
  }

  public void setSmTPPassword(String smTPPassword) {
    this.smTPPassword = smTPPassword;
  }

  public ConfigEmailSettings smTPServer(String smTPServer) {
    this.smTPServer = smTPServer;
    return this;
  }

   /**
   * Get smTPServer
   * @return smTPServer
  **/
  @ApiModelProperty(value = "")
  public String getSmTPServer() {
    return smTPServer;
  }

  public void setSmTPServer(String smTPServer) {
    this.smTPServer = smTPServer;
  }

  public ConfigEmailSettings smTPPort(String smTPPort) {
    this.smTPPort = smTPPort;
    return this;
  }

   /**
   * Get smTPPort
   * @return smTPPort
  **/
  @ApiModelProperty(value = "")
  public String getSmTPPort() {
    return smTPPort;
  }

  public void setSmTPPort(String smTPPort) {
    this.smTPPort = smTPPort;
  }

  public ConfigEmailSettings connectionSecurity(String connectionSecurity) {
    this.connectionSecurity = connectionSecurity;
    return this;
  }

   /**
   * Get connectionSecurity
   * @return connectionSecurity
  **/
  @ApiModelProperty(value = "")
  public String getConnectionSecurity() {
    return connectionSecurity;
  }

  public void setConnectionSecurity(String connectionSecurity) {
    this.connectionSecurity = connectionSecurity;
  }

  public ConfigEmailSettings inviteSalt(String inviteSalt) {
    this.inviteSalt = inviteSalt;
    return this;
  }

   /**
   * Get inviteSalt
   * @return inviteSalt
  **/
  @ApiModelProperty(value = "")
  public String getInviteSalt() {
    return inviteSalt;
  }

  public void setInviteSalt(String inviteSalt) {
    this.inviteSalt = inviteSalt;
  }

  public ConfigEmailSettings passwordResetSalt(String passwordResetSalt) {
    this.passwordResetSalt = passwordResetSalt;
    return this;
  }

   /**
   * Get passwordResetSalt
   * @return passwordResetSalt
  **/
  @ApiModelProperty(value = "")
  public String getPasswordResetSalt() {
    return passwordResetSalt;
  }

  public void setPasswordResetSalt(String passwordResetSalt) {
    this.passwordResetSalt = passwordResetSalt;
  }

  public ConfigEmailSettings sendPushNotifications(Boolean sendPushNotifications) {
    this.sendPushNotifications = sendPushNotifications;
    return this;
  }

   /**
   * Get sendPushNotifications
   * @return sendPushNotifications
  **/
  @ApiModelProperty(value = "")
  public Boolean isSendPushNotifications() {
    return sendPushNotifications;
  }

  public void setSendPushNotifications(Boolean sendPushNotifications) {
    this.sendPushNotifications = sendPushNotifications;
  }

  public ConfigEmailSettings pushNotificationServer(String pushNotificationServer) {
    this.pushNotificationServer = pushNotificationServer;
    return this;
  }

   /**
   * Get pushNotificationServer
   * @return pushNotificationServer
  **/
  @ApiModelProperty(value = "")
  public String getPushNotificationServer() {
    return pushNotificationServer;
  }

  public void setPushNotificationServer(String pushNotificationServer) {
    this.pushNotificationServer = pushNotificationServer;
  }

  public ConfigEmailSettings pushNotificationContents(String pushNotificationContents) {
    this.pushNotificationContents = pushNotificationContents;
    return this;
  }

   /**
   * Get pushNotificationContents
   * @return pushNotificationContents
  **/
  @ApiModelProperty(value = "")
  public String getPushNotificationContents() {
    return pushNotificationContents;
  }

  public void setPushNotificationContents(String pushNotificationContents) {
    this.pushNotificationContents = pushNotificationContents;
  }

  public ConfigEmailSettings enableEmailBatching(Boolean enableEmailBatching) {
    this.enableEmailBatching = enableEmailBatching;
    return this;
  }

   /**
   * Get enableEmailBatching
   * @return enableEmailBatching
  **/
  @ApiModelProperty(value = "")
  public Boolean isEnableEmailBatching() {
    return enableEmailBatching;
  }

  public void setEnableEmailBatching(Boolean enableEmailBatching) {
    this.enableEmailBatching = enableEmailBatching;
  }

  public ConfigEmailSettings emailBatchingBufferSize(Integer emailBatchingBufferSize) {
    this.emailBatchingBufferSize = emailBatchingBufferSize;
    return this;
  }

   /**
   * Get emailBatchingBufferSize
   * @return emailBatchingBufferSize
  **/
  @ApiModelProperty(value = "")
  public Integer getEmailBatchingBufferSize() {
    return emailBatchingBufferSize;
  }

  public void setEmailBatchingBufferSize(Integer emailBatchingBufferSize) {
    this.emailBatchingBufferSize = emailBatchingBufferSize;
  }

  public ConfigEmailSettings emailBatchingInterval(Integer emailBatchingInterval) {
    this.emailBatchingInterval = emailBatchingInterval;
    return this;
  }

   /**
   * Get emailBatchingInterval
   * @return emailBatchingInterval
  **/
  @ApiModelProperty(value = "")
  public Integer getEmailBatchingInterval() {
    return emailBatchingInterval;
  }

  public void setEmailBatchingInterval(Integer emailBatchingInterval) {
    this.emailBatchingInterval = emailBatchingInterval;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfigEmailSettings configEmailSettings = (ConfigEmailSettings) o;
    return Objects.equals(this.enableSignUpWithEmail, configEmailSettings.enableSignUpWithEmail) &&
        Objects.equals(this.enableSignInWithEmail, configEmailSettings.enableSignInWithEmail) &&
        Objects.equals(this.enableSignInWithUsername, configEmailSettings.enableSignInWithUsername) &&
        Objects.equals(this.sendEmailNotifications, configEmailSettings.sendEmailNotifications) &&
        Objects.equals(this.requireEmailVerification, configEmailSettings.requireEmailVerification) &&
        Objects.equals(this.feedbackName, configEmailSettings.feedbackName) &&
        Objects.equals(this.feedbackEmail, configEmailSettings.feedbackEmail) &&
        Objects.equals(this.feedbackOrganization, configEmailSettings.feedbackOrganization) &&
        Objects.equals(this.smTPUsername, configEmailSettings.smTPUsername) &&
        Objects.equals(this.smTPPassword, configEmailSettings.smTPPassword) &&
        Objects.equals(this.smTPServer, configEmailSettings.smTPServer) &&
        Objects.equals(this.smTPPort, configEmailSettings.smTPPort) &&
        Objects.equals(this.connectionSecurity, configEmailSettings.connectionSecurity) &&
        Objects.equals(this.inviteSalt, configEmailSettings.inviteSalt) &&
        Objects.equals(this.passwordResetSalt, configEmailSettings.passwordResetSalt) &&
        Objects.equals(this.sendPushNotifications, configEmailSettings.sendPushNotifications) &&
        Objects.equals(this.pushNotificationServer, configEmailSettings.pushNotificationServer) &&
        Objects.equals(this.pushNotificationContents, configEmailSettings.pushNotificationContents) &&
        Objects.equals(this.enableEmailBatching, configEmailSettings.enableEmailBatching) &&
        Objects.equals(this.emailBatchingBufferSize, configEmailSettings.emailBatchingBufferSize) &&
        Objects.equals(this.emailBatchingInterval, configEmailSettings.emailBatchingInterval);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enableSignUpWithEmail, enableSignInWithEmail, enableSignInWithUsername, sendEmailNotifications, requireEmailVerification, feedbackName, feedbackEmail, feedbackOrganization, smTPUsername, smTPPassword, smTPServer, smTPPort, connectionSecurity, inviteSalt, passwordResetSalt, sendPushNotifications, pushNotificationServer, pushNotificationContents, enableEmailBatching, emailBatchingBufferSize, emailBatchingInterval);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfigEmailSettings {\n");
    
    sb.append("    enableSignUpWithEmail: ").append(toIndentedString(enableSignUpWithEmail)).append("\n");
    sb.append("    enableSignInWithEmail: ").append(toIndentedString(enableSignInWithEmail)).append("\n");
    sb.append("    enableSignInWithUsername: ").append(toIndentedString(enableSignInWithUsername)).append("\n");
    sb.append("    sendEmailNotifications: ").append(toIndentedString(sendEmailNotifications)).append("\n");
    sb.append("    requireEmailVerification: ").append(toIndentedString(requireEmailVerification)).append("\n");
    sb.append("    feedbackName: ").append(toIndentedString(feedbackName)).append("\n");
    sb.append("    feedbackEmail: ").append(toIndentedString(feedbackEmail)).append("\n");
    sb.append("    feedbackOrganization: ").append(toIndentedString(feedbackOrganization)).append("\n");
    sb.append("    smTPUsername: ").append(toIndentedString(smTPUsername)).append("\n");
    sb.append("    smTPPassword: ").append(toIndentedString(smTPPassword)).append("\n");
    sb.append("    smTPServer: ").append(toIndentedString(smTPServer)).append("\n");
    sb.append("    smTPPort: ").append(toIndentedString(smTPPort)).append("\n");
    sb.append("    connectionSecurity: ").append(toIndentedString(connectionSecurity)).append("\n");
    sb.append("    inviteSalt: ").append(toIndentedString(inviteSalt)).append("\n");
    sb.append("    passwordResetSalt: ").append(toIndentedString(passwordResetSalt)).append("\n");
    sb.append("    sendPushNotifications: ").append(toIndentedString(sendPushNotifications)).append("\n");
    sb.append("    pushNotificationServer: ").append(toIndentedString(pushNotificationServer)).append("\n");
    sb.append("    pushNotificationContents: ").append(toIndentedString(pushNotificationContents)).append("\n");
    sb.append("    enableEmailBatching: ").append(toIndentedString(enableEmailBatching)).append("\n");
    sb.append("    emailBatchingBufferSize: ").append(toIndentedString(emailBatchingBufferSize)).append("\n");
    sb.append("    emailBatchingInterval: ").append(toIndentedString(emailBatchingInterval)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

