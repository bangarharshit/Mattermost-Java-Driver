/*
 * Mattermost API Reference
 * ### API version 4 is stable with the Mattermost server 4.0 release. API version 3 is scheduled for deprecation on January 16th, 2018. [Details here](/#tag/APIv3-Deprecation). Looking for the APIv3 reference? It has moved [here](https://api.mattermost.com/v3). 
 *
 * OpenAPI spec version: 4.0.0
 * Contact: feedback@mattermost.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.SlackAttachmentField;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * SlackAttachment
 */

public class SlackAttachment {
  @SerializedName("Id")
  private String id = null;

  @SerializedName("Fallback")
  private String fallback = null;

  @SerializedName("Color")
  private String color = null;

  @SerializedName("Pretext")
  private String pretext = null;

  @SerializedName("AuthorName")
  private String authorName = null;

  @SerializedName("AuthorLink")
  private String authorLink = null;

  @SerializedName("AuthorIcon")
  private String authorIcon = null;

  @SerializedName("Title")
  private String title = null;

  @SerializedName("TitleLink")
  private String titleLink = null;

  @SerializedName("Text")
  private String text = null;

  @SerializedName("Fields")
  private List<SlackAttachmentField> fields = null;

  @SerializedName("ImageURL")
  private String imageURL = null;

  @SerializedName("ThumbURL")
  private String thumbURL = null;

  @SerializedName("Footer")
  private String footer = null;

  @SerializedName("FooterIcon")
  private String footerIcon = null;

  @SerializedName("Timestamp")
  private String timestamp = null;

  public SlackAttachment id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public SlackAttachment fallback(String fallback) {
    this.fallback = fallback;
    return this;
  }

   /**
   * Get fallback
   * @return fallback
  **/
  @ApiModelProperty(value = "")
  public String getFallback() {
    return fallback;
  }

  public void setFallback(String fallback) {
    this.fallback = fallback;
  }

  public SlackAttachment color(String color) {
    this.color = color;
    return this;
  }

   /**
   * Get color
   * @return color
  **/
  @ApiModelProperty(value = "")
  public String getColor() {
    return color;
  }

  public void setColor(String color) {
    this.color = color;
  }

  public SlackAttachment pretext(String pretext) {
    this.pretext = pretext;
    return this;
  }

   /**
   * Get pretext
   * @return pretext
  **/
  @ApiModelProperty(value = "")
  public String getPretext() {
    return pretext;
  }

  public void setPretext(String pretext) {
    this.pretext = pretext;
  }

  public SlackAttachment authorName(String authorName) {
    this.authorName = authorName;
    return this;
  }

   /**
   * Get authorName
   * @return authorName
  **/
  @ApiModelProperty(value = "")
  public String getAuthorName() {
    return authorName;
  }

  public void setAuthorName(String authorName) {
    this.authorName = authorName;
  }

  public SlackAttachment authorLink(String authorLink) {
    this.authorLink = authorLink;
    return this;
  }

   /**
   * Get authorLink
   * @return authorLink
  **/
  @ApiModelProperty(value = "")
  public String getAuthorLink() {
    return authorLink;
  }

  public void setAuthorLink(String authorLink) {
    this.authorLink = authorLink;
  }

  public SlackAttachment authorIcon(String authorIcon) {
    this.authorIcon = authorIcon;
    return this;
  }

   /**
   * Get authorIcon
   * @return authorIcon
  **/
  @ApiModelProperty(value = "")
  public String getAuthorIcon() {
    return authorIcon;
  }

  public void setAuthorIcon(String authorIcon) {
    this.authorIcon = authorIcon;
  }

  public SlackAttachment title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @ApiModelProperty(value = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public SlackAttachment titleLink(String titleLink) {
    this.titleLink = titleLink;
    return this;
  }

   /**
   * Get titleLink
   * @return titleLink
  **/
  @ApiModelProperty(value = "")
  public String getTitleLink() {
    return titleLink;
  }

  public void setTitleLink(String titleLink) {
    this.titleLink = titleLink;
  }

  public SlackAttachment text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @ApiModelProperty(value = "")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public SlackAttachment fields(List<SlackAttachmentField> fields) {
    this.fields = fields;
    return this;
  }

  public SlackAttachment addFieldsItem(SlackAttachmentField fieldsItem) {
    if (this.fields == null) {
      this.fields = new ArrayList<SlackAttachmentField>();
    }
    this.fields.add(fieldsItem);
    return this;
  }

   /**
   * Get fields
   * @return fields
  **/
  @ApiModelProperty(value = "")
  public List<SlackAttachmentField> getFields() {
    return fields;
  }

  public void setFields(List<SlackAttachmentField> fields) {
    this.fields = fields;
  }

  public SlackAttachment imageURL(String imageURL) {
    this.imageURL = imageURL;
    return this;
  }

   /**
   * Get imageURL
   * @return imageURL
  **/
  @ApiModelProperty(value = "")
  public String getImageURL() {
    return imageURL;
  }

  public void setImageURL(String imageURL) {
    this.imageURL = imageURL;
  }

  public SlackAttachment thumbURL(String thumbURL) {
    this.thumbURL = thumbURL;
    return this;
  }

   /**
   * Get thumbURL
   * @return thumbURL
  **/
  @ApiModelProperty(value = "")
  public String getThumbURL() {
    return thumbURL;
  }

  public void setThumbURL(String thumbURL) {
    this.thumbURL = thumbURL;
  }

  public SlackAttachment footer(String footer) {
    this.footer = footer;
    return this;
  }

   /**
   * Get footer
   * @return footer
  **/
  @ApiModelProperty(value = "")
  public String getFooter() {
    return footer;
  }

  public void setFooter(String footer) {
    this.footer = footer;
  }

  public SlackAttachment footerIcon(String footerIcon) {
    this.footerIcon = footerIcon;
    return this;
  }

   /**
   * Get footerIcon
   * @return footerIcon
  **/
  @ApiModelProperty(value = "")
  public String getFooterIcon() {
    return footerIcon;
  }

  public void setFooterIcon(String footerIcon) {
    this.footerIcon = footerIcon;
  }

  public SlackAttachment timestamp(String timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * The timestamp of the slack attahment, either type of string or integer
   * @return timestamp
  **/
  @ApiModelProperty(value = "The timestamp of the slack attahment, either type of string or integer")
  public String getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SlackAttachment slackAttachment = (SlackAttachment) o;
    return Objects.equals(this.id, slackAttachment.id) &&
        Objects.equals(this.fallback, slackAttachment.fallback) &&
        Objects.equals(this.color, slackAttachment.color) &&
        Objects.equals(this.pretext, slackAttachment.pretext) &&
        Objects.equals(this.authorName, slackAttachment.authorName) &&
        Objects.equals(this.authorLink, slackAttachment.authorLink) &&
        Objects.equals(this.authorIcon, slackAttachment.authorIcon) &&
        Objects.equals(this.title, slackAttachment.title) &&
        Objects.equals(this.titleLink, slackAttachment.titleLink) &&
        Objects.equals(this.text, slackAttachment.text) &&
        Objects.equals(this.fields, slackAttachment.fields) &&
        Objects.equals(this.imageURL, slackAttachment.imageURL) &&
        Objects.equals(this.thumbURL, slackAttachment.thumbURL) &&
        Objects.equals(this.footer, slackAttachment.footer) &&
        Objects.equals(this.footerIcon, slackAttachment.footerIcon) &&
        Objects.equals(this.timestamp, slackAttachment.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, fallback, color, pretext, authorName, authorLink, authorIcon, title, titleLink, text, fields, imageURL, thumbURL, footer, footerIcon, timestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SlackAttachment {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    fallback: ").append(toIndentedString(fallback)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    pretext: ").append(toIndentedString(pretext)).append("\n");
    sb.append("    authorName: ").append(toIndentedString(authorName)).append("\n");
    sb.append("    authorLink: ").append(toIndentedString(authorLink)).append("\n");
    sb.append("    authorIcon: ").append(toIndentedString(authorIcon)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    titleLink: ").append(toIndentedString(titleLink)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    imageURL: ").append(toIndentedString(imageURL)).append("\n");
    sb.append("    thumbURL: ").append(toIndentedString(thumbURL)).append("\n");
    sb.append("    footer: ").append(toIndentedString(footer)).append("\n");
    sb.append("    footerIcon: ").append(toIndentedString(footerIcon)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

