/*
 * Mattermost API Reference
 * ### API version 4 is stable with the Mattermost server 4.0 release. API version 3 is scheduled for deprecation on January 16th, 2018. [Details here](/#tag/APIv3-Deprecation). Looking for the APIv3 reference? It has moved [here](https://api.mattermost.com/v3). 
 *
 * OpenAPI spec version: 4.0.0
 * Contact: feedback@mattermost.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Body1
 */

public class Body1 {
  @SerializedName("term")
  private String term = null;

  @SerializedName("team_id")
  private String teamId = null;

  @SerializedName("not_in_team_id")
  private String notInTeamId = null;

  @SerializedName("in_channel_id")
  private String inChannelId = null;

  @SerializedName("not_in_channel_id")
  private String notInChannelId = null;

  @SerializedName("allow_inactive")
  private Boolean allowInactive = null;

  @SerializedName("without_team")
  private Boolean withoutTeam = null;

  public Body1 term(String term) {
    this.term = term;
    return this;
  }

   /**
   * The term to match against username, full name, nickname and email
   * @return term
  **/
  @ApiModelProperty(required = true, value = "The term to match against username, full name, nickname and email")
  public String getTerm() {
    return term;
  }

  public void setTerm(String term) {
    this.term = term;
  }

  public Body1 teamId(String teamId) {
    this.teamId = teamId;
    return this;
  }

   /**
   * If provided, only search users on this team
   * @return teamId
  **/
  @ApiModelProperty(value = "If provided, only search users on this team")
  public String getTeamId() {
    return teamId;
  }

  public void setTeamId(String teamId) {
    this.teamId = teamId;
  }

  public Body1 notInTeamId(String notInTeamId) {
    this.notInTeamId = notInTeamId;
    return this;
  }

   /**
   * If provided, only search users not on this team
   * @return notInTeamId
  **/
  @ApiModelProperty(value = "If provided, only search users not on this team")
  public String getNotInTeamId() {
    return notInTeamId;
  }

  public void setNotInTeamId(String notInTeamId) {
    this.notInTeamId = notInTeamId;
  }

  public Body1 inChannelId(String inChannelId) {
    this.inChannelId = inChannelId;
    return this;
  }

   /**
   * If provided, only search users in this channel
   * @return inChannelId
  **/
  @ApiModelProperty(value = "If provided, only search users in this channel")
  public String getInChannelId() {
    return inChannelId;
  }

  public void setInChannelId(String inChannelId) {
    this.inChannelId = inChannelId;
  }

  public Body1 notInChannelId(String notInChannelId) {
    this.notInChannelId = notInChannelId;
    return this;
  }

   /**
   * If provided, only search users not in this channel. Must specifiy &#x60;team_id&#x60; when using this option
   * @return notInChannelId
  **/
  @ApiModelProperty(value = "If provided, only search users not in this channel. Must specifiy `team_id` when using this option")
  public String getNotInChannelId() {
    return notInChannelId;
  }

  public void setNotInChannelId(String notInChannelId) {
    this.notInChannelId = notInChannelId;
  }

  public Body1 allowInactive(Boolean allowInactive) {
    this.allowInactive = allowInactive;
    return this;
  }

   /**
   * When &#x60;true&#x60;, include deactivated users in the results
   * @return allowInactive
  **/
  @ApiModelProperty(value = "When `true`, include deactivated users in the results")
  public Boolean isAllowInactive() {
    return allowInactive;
  }

  public void setAllowInactive(Boolean allowInactive) {
    this.allowInactive = allowInactive;
  }

  public Body1 withoutTeam(Boolean withoutTeam) {
    this.withoutTeam = withoutTeam;
    return this;
  }

   /**
   * Set this to &#x60;true&#x60; if you would like to search for users that are not on a team. This option takes precendence over &#x60;team_id&#x60;, &#x60;in_channel_id&#x60;, and &#x60;not_in_channel_id&#x60;.
   * @return withoutTeam
  **/
  @ApiModelProperty(value = "Set this to `true` if you would like to search for users that are not on a team. This option takes precendence over `team_id`, `in_channel_id`, and `not_in_channel_id`.")
  public Boolean isWithoutTeam() {
    return withoutTeam;
  }

  public void setWithoutTeam(Boolean withoutTeam) {
    this.withoutTeam = withoutTeam;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Body1 body1 = (Body1) o;
    return Objects.equals(this.term, body1.term) &&
        Objects.equals(this.teamId, body1.teamId) &&
        Objects.equals(this.notInTeamId, body1.notInTeamId) &&
        Objects.equals(this.inChannelId, body1.inChannelId) &&
        Objects.equals(this.notInChannelId, body1.notInChannelId) &&
        Objects.equals(this.allowInactive, body1.allowInactive) &&
        Objects.equals(this.withoutTeam, body1.withoutTeam);
  }

  @Override
  public int hashCode() {
    return Objects.hash(term, teamId, notInTeamId, inChannelId, notInChannelId, allowInactive, withoutTeam);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Body1 {\n");
    
    sb.append("    term: ").append(toIndentedString(term)).append("\n");
    sb.append("    teamId: ").append(toIndentedString(teamId)).append("\n");
    sb.append("    notInTeamId: ").append(toIndentedString(notInTeamId)).append("\n");
    sb.append("    inChannelId: ").append(toIndentedString(inChannelId)).append("\n");
    sb.append("    notInChannelId: ").append(toIndentedString(notInChannelId)).append("\n");
    sb.append("    allowInactive: ").append(toIndentedString(allowInactive)).append("\n");
    sb.append("    withoutTeam: ").append(toIndentedString(withoutTeam)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

