/*
 * Mattermost API Reference
 * ### API version 4 is stable with the Mattermost server 4.0 release. API version 3 is scheduled for deprecation on January 16th, 2018. [Details here](/#tag/APIv3-Deprecation). Looking for the APIv3 reference? It has moved [here](https://api.mattermost.com/v3). 
 *
 * OpenAPI spec version: 4.0.0
 * Contact: feedback@mattermost.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.UserNotifyProps;
import java.io.IOException;

/**
 * User
 */

public class User {
  @SerializedName("id")
  private String id = null;

  @SerializedName("create_at")
  private Integer createAt = null;

  @SerializedName("update_at")
  private Integer updateAt = null;

  @SerializedName("delete_at")
  private Integer deleteAt = null;

  @SerializedName("username")
  private String username = null;

  @SerializedName("first_name")
  private String firstName = null;

  @SerializedName("last_name")
  private String lastName = null;

  @SerializedName("nickname")
  private String nickname = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("email_verified")
  private Boolean emailVerified = null;

  @SerializedName("auth_service")
  private String authService = null;

  @SerializedName("roles")
  private String roles = null;

  @SerializedName("locale")
  private String locale = null;

  @SerializedName("notify_props")
  private UserNotifyProps notifyProps = null;

  @SerializedName("props")
  private Object props = null;

  @SerializedName("last_password_update")
  private Integer lastPasswordUpdate = null;

  @SerializedName("last_picture_update")
  private Integer lastPictureUpdate = null;

  @SerializedName("failed_attempts")
  private Integer failedAttempts = null;

  @SerializedName("mfa_active")
  private Boolean mfaActive = null;

  public User id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public User createAt(Integer createAt) {
    this.createAt = createAt;
    return this;
  }

   /**
   * Get createAt
   * @return createAt
  **/
  @ApiModelProperty(value = "")
  public Integer getCreateAt() {
    return createAt;
  }

  public void setCreateAt(Integer createAt) {
    this.createAt = createAt;
  }

  public User updateAt(Integer updateAt) {
    this.updateAt = updateAt;
    return this;
  }

   /**
   * Get updateAt
   * @return updateAt
  **/
  @ApiModelProperty(value = "")
  public Integer getUpdateAt() {
    return updateAt;
  }

  public void setUpdateAt(Integer updateAt) {
    this.updateAt = updateAt;
  }

  public User deleteAt(Integer deleteAt) {
    this.deleteAt = deleteAt;
    return this;
  }

   /**
   * Get deleteAt
   * @return deleteAt
  **/
  @ApiModelProperty(value = "")
  public Integer getDeleteAt() {
    return deleteAt;
  }

  public void setDeleteAt(Integer deleteAt) {
    this.deleteAt = deleteAt;
  }

  public User username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @ApiModelProperty(value = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public User firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @ApiModelProperty(value = "")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public User lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @ApiModelProperty(value = "")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public User nickname(String nickname) {
    this.nickname = nickname;
    return this;
  }

   /**
   * Get nickname
   * @return nickname
  **/
  @ApiModelProperty(value = "")
  public String getNickname() {
    return nickname;
  }

  public void setNickname(String nickname) {
    this.nickname = nickname;
  }

  public User email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @ApiModelProperty(value = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public User emailVerified(Boolean emailVerified) {
    this.emailVerified = emailVerified;
    return this;
  }

   /**
   * Get emailVerified
   * @return emailVerified
  **/
  @ApiModelProperty(value = "")
  public Boolean isEmailVerified() {
    return emailVerified;
  }

  public void setEmailVerified(Boolean emailVerified) {
    this.emailVerified = emailVerified;
  }

  public User authService(String authService) {
    this.authService = authService;
    return this;
  }

   /**
   * Get authService
   * @return authService
  **/
  @ApiModelProperty(value = "")
  public String getAuthService() {
    return authService;
  }

  public void setAuthService(String authService) {
    this.authService = authService;
  }

  public User roles(String roles) {
    this.roles = roles;
    return this;
  }

   /**
   * Get roles
   * @return roles
  **/
  @ApiModelProperty(value = "")
  public String getRoles() {
    return roles;
  }

  public void setRoles(String roles) {
    this.roles = roles;
  }

  public User locale(String locale) {
    this.locale = locale;
    return this;
  }

   /**
   * Get locale
   * @return locale
  **/
  @ApiModelProperty(value = "")
  public String getLocale() {
    return locale;
  }

  public void setLocale(String locale) {
    this.locale = locale;
  }

  public User notifyProps(UserNotifyProps notifyProps) {
    this.notifyProps = notifyProps;
    return this;
  }

   /**
   * Field only visible to self and admins
   * @return notifyProps
  **/
  @ApiModelProperty(value = "Field only visible to self and admins")
  public UserNotifyProps getNotifyProps() {
    return notifyProps;
  }

  public void setNotifyProps(UserNotifyProps notifyProps) {
    this.notifyProps = notifyProps;
  }

  public User props(Object props) {
    this.props = props;
    return this;
  }

   /**
   * Get props
   * @return props
  **/
  @ApiModelProperty(value = "")
  public Object getProps() {
    return props;
  }

  public void setProps(Object props) {
    this.props = props;
  }

  public User lastPasswordUpdate(Integer lastPasswordUpdate) {
    this.lastPasswordUpdate = lastPasswordUpdate;
    return this;
  }

   /**
   * Get lastPasswordUpdate
   * @return lastPasswordUpdate
  **/
  @ApiModelProperty(value = "")
  public Integer getLastPasswordUpdate() {
    return lastPasswordUpdate;
  }

  public void setLastPasswordUpdate(Integer lastPasswordUpdate) {
    this.lastPasswordUpdate = lastPasswordUpdate;
  }

  public User lastPictureUpdate(Integer lastPictureUpdate) {
    this.lastPictureUpdate = lastPictureUpdate;
    return this;
  }

   /**
   * Get lastPictureUpdate
   * @return lastPictureUpdate
  **/
  @ApiModelProperty(value = "")
  public Integer getLastPictureUpdate() {
    return lastPictureUpdate;
  }

  public void setLastPictureUpdate(Integer lastPictureUpdate) {
    this.lastPictureUpdate = lastPictureUpdate;
  }

  public User failedAttempts(Integer failedAttempts) {
    this.failedAttempts = failedAttempts;
    return this;
  }

   /**
   * Get failedAttempts
   * @return failedAttempts
  **/
  @ApiModelProperty(value = "")
  public Integer getFailedAttempts() {
    return failedAttempts;
  }

  public void setFailedAttempts(Integer failedAttempts) {
    this.failedAttempts = failedAttempts;
  }

  public User mfaActive(Boolean mfaActive) {
    this.mfaActive = mfaActive;
    return this;
  }

   /**
   * Get mfaActive
   * @return mfaActive
  **/
  @ApiModelProperty(value = "")
  public Boolean isMfaActive() {
    return mfaActive;
  }

  public void setMfaActive(Boolean mfaActive) {
    this.mfaActive = mfaActive;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    User user = (User) o;
    return Objects.equals(this.id, user.id) &&
        Objects.equals(this.createAt, user.createAt) &&
        Objects.equals(this.updateAt, user.updateAt) &&
        Objects.equals(this.deleteAt, user.deleteAt) &&
        Objects.equals(this.username, user.username) &&
        Objects.equals(this.firstName, user.firstName) &&
        Objects.equals(this.lastName, user.lastName) &&
        Objects.equals(this.nickname, user.nickname) &&
        Objects.equals(this.email, user.email) &&
        Objects.equals(this.emailVerified, user.emailVerified) &&
        Objects.equals(this.authService, user.authService) &&
        Objects.equals(this.roles, user.roles) &&
        Objects.equals(this.locale, user.locale) &&
        Objects.equals(this.notifyProps, user.notifyProps) &&
        Objects.equals(this.props, user.props) &&
        Objects.equals(this.lastPasswordUpdate, user.lastPasswordUpdate) &&
        Objects.equals(this.lastPictureUpdate, user.lastPictureUpdate) &&
        Objects.equals(this.failedAttempts, user.failedAttempts) &&
        Objects.equals(this.mfaActive, user.mfaActive);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createAt, updateAt, deleteAt, username, firstName, lastName, nickname, email, emailVerified, authService, roles, locale, notifyProps, props, lastPasswordUpdate, lastPictureUpdate, failedAttempts, mfaActive);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class User {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createAt: ").append(toIndentedString(createAt)).append("\n");
    sb.append("    updateAt: ").append(toIndentedString(updateAt)).append("\n");
    sb.append("    deleteAt: ").append(toIndentedString(deleteAt)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    nickname: ").append(toIndentedString(nickname)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    emailVerified: ").append(toIndentedString(emailVerified)).append("\n");
    sb.append("    authService: ").append(toIndentedString(authService)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    notifyProps: ").append(toIndentedString(notifyProps)).append("\n");
    sb.append("    props: ").append(toIndentedString(props)).append("\n");
    sb.append("    lastPasswordUpdate: ").append(toIndentedString(lastPasswordUpdate)).append("\n");
    sb.append("    lastPictureUpdate: ").append(toIndentedString(lastPictureUpdate)).append("\n");
    sb.append("    failedAttempts: ").append(toIndentedString(failedAttempts)).append("\n");
    sb.append("    mfaActive: ").append(toIndentedString(mfaActive)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

