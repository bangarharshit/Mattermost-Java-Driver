/*
 * Mattermost API Reference
 * ### API version 4 is stable with the Mattermost server 4.0 release. API version 3 is scheduled for deprecation on January 16th, 2018. [Details here](/#tag/APIv3-Deprecation). Looking for the APIv3 reference? It has moved [here](https://api.mattermost.com/v3). 
 *
 * OpenAPI spec version: 4.0.0
 * Contact: feedback@mattermost.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ConfigClusterSettings
 */

public class ConfigClusterSettings {
  @SerializedName("Enable")
  private Boolean enable = null;

  @SerializedName("InterNodeListenAddress")
  private String interNodeListenAddress = null;

  @SerializedName("InterNodeUrls")
  private List<String> interNodeUrls = null;

  public ConfigClusterSettings enable(Boolean enable) {
    this.enable = enable;
    return this;
  }

   /**
   * Get enable
   * @return enable
  **/
  @ApiModelProperty(value = "")
  public Boolean isEnable() {
    return enable;
  }

  public void setEnable(Boolean enable) {
    this.enable = enable;
  }

  public ConfigClusterSettings interNodeListenAddress(String interNodeListenAddress) {
    this.interNodeListenAddress = interNodeListenAddress;
    return this;
  }

   /**
   * Get interNodeListenAddress
   * @return interNodeListenAddress
  **/
  @ApiModelProperty(value = "")
  public String getInterNodeListenAddress() {
    return interNodeListenAddress;
  }

  public void setInterNodeListenAddress(String interNodeListenAddress) {
    this.interNodeListenAddress = interNodeListenAddress;
  }

  public ConfigClusterSettings interNodeUrls(List<String> interNodeUrls) {
    this.interNodeUrls = interNodeUrls;
    return this;
  }

  public ConfigClusterSettings addInterNodeUrlsItem(String interNodeUrlsItem) {
    if (this.interNodeUrls == null) {
      this.interNodeUrls = new ArrayList<String>();
    }
    this.interNodeUrls.add(interNodeUrlsItem);
    return this;
  }

   /**
   * Get interNodeUrls
   * @return interNodeUrls
  **/
  @ApiModelProperty(value = "")
  public List<String> getInterNodeUrls() {
    return interNodeUrls;
  }

  public void setInterNodeUrls(List<String> interNodeUrls) {
    this.interNodeUrls = interNodeUrls;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfigClusterSettings configClusterSettings = (ConfigClusterSettings) o;
    return Objects.equals(this.enable, configClusterSettings.enable) &&
        Objects.equals(this.interNodeListenAddress, configClusterSettings.interNodeListenAddress) &&
        Objects.equals(this.interNodeUrls, configClusterSettings.interNodeUrls);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enable, interNodeListenAddress, interNodeUrls);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfigClusterSettings {\n");
    
    sb.append("    enable: ").append(toIndentedString(enable)).append("\n");
    sb.append("    interNodeListenAddress: ").append(toIndentedString(interNodeListenAddress)).append("\n");
    sb.append("    interNodeUrls: ").append(toIndentedString(interNodeUrls)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

