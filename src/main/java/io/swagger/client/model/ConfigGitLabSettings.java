/*
 * Mattermost API Reference
 * ### API version 4 is stable with the Mattermost server 4.0 release. API version 3 is scheduled for deprecation on January 16th, 2018. [Details here](/#tag/APIv3-Deprecation). Looking for the APIv3 reference? It has moved [here](https://api.mattermost.com/v3). 
 *
 * OpenAPI spec version: 4.0.0
 * Contact: feedback@mattermost.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ConfigGitLabSettings
 */

public class ConfigGitLabSettings {
  @SerializedName("Enable")
  private Boolean enable = null;

  @SerializedName("Secret")
  private String secret = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("Scope")
  private String scope = null;

  @SerializedName("AuthEndpoint")
  private String authEndpoint = null;

  @SerializedName("TokenEndpoint")
  private String tokenEndpoint = null;

  @SerializedName("UserApiEndpoint")
  private String userApiEndpoint = null;

  public ConfigGitLabSettings enable(Boolean enable) {
    this.enable = enable;
    return this;
  }

   /**
   * Get enable
   * @return enable
  **/
  @ApiModelProperty(value = "")
  public Boolean isEnable() {
    return enable;
  }

  public void setEnable(Boolean enable) {
    this.enable = enable;
  }

  public ConfigGitLabSettings secret(String secret) {
    this.secret = secret;
    return this;
  }

   /**
   * Get secret
   * @return secret
  **/
  @ApiModelProperty(value = "")
  public String getSecret() {
    return secret;
  }

  public void setSecret(String secret) {
    this.secret = secret;
  }

  public ConfigGitLabSettings id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ConfigGitLabSettings scope(String scope) {
    this.scope = scope;
    return this;
  }

   /**
   * Get scope
   * @return scope
  **/
  @ApiModelProperty(value = "")
  public String getScope() {
    return scope;
  }

  public void setScope(String scope) {
    this.scope = scope;
  }

  public ConfigGitLabSettings authEndpoint(String authEndpoint) {
    this.authEndpoint = authEndpoint;
    return this;
  }

   /**
   * Get authEndpoint
   * @return authEndpoint
  **/
  @ApiModelProperty(value = "")
  public String getAuthEndpoint() {
    return authEndpoint;
  }

  public void setAuthEndpoint(String authEndpoint) {
    this.authEndpoint = authEndpoint;
  }

  public ConfigGitLabSettings tokenEndpoint(String tokenEndpoint) {
    this.tokenEndpoint = tokenEndpoint;
    return this;
  }

   /**
   * Get tokenEndpoint
   * @return tokenEndpoint
  **/
  @ApiModelProperty(value = "")
  public String getTokenEndpoint() {
    return tokenEndpoint;
  }

  public void setTokenEndpoint(String tokenEndpoint) {
    this.tokenEndpoint = tokenEndpoint;
  }

  public ConfigGitLabSettings userApiEndpoint(String userApiEndpoint) {
    this.userApiEndpoint = userApiEndpoint;
    return this;
  }

   /**
   * Get userApiEndpoint
   * @return userApiEndpoint
  **/
  @ApiModelProperty(value = "")
  public String getUserApiEndpoint() {
    return userApiEndpoint;
  }

  public void setUserApiEndpoint(String userApiEndpoint) {
    this.userApiEndpoint = userApiEndpoint;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfigGitLabSettings configGitLabSettings = (ConfigGitLabSettings) o;
    return Objects.equals(this.enable, configGitLabSettings.enable) &&
        Objects.equals(this.secret, configGitLabSettings.secret) &&
        Objects.equals(this.id, configGitLabSettings.id) &&
        Objects.equals(this.scope, configGitLabSettings.scope) &&
        Objects.equals(this.authEndpoint, configGitLabSettings.authEndpoint) &&
        Objects.equals(this.tokenEndpoint, configGitLabSettings.tokenEndpoint) &&
        Objects.equals(this.userApiEndpoint, configGitLabSettings.userApiEndpoint);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enable, secret, id, scope, authEndpoint, tokenEndpoint, userApiEndpoint);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfigGitLabSettings {\n");
    
    sb.append("    enable: ").append(toIndentedString(enable)).append("\n");
    sb.append("    secret: ").append(toIndentedString(secret)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    authEndpoint: ").append(toIndentedString(authEndpoint)).append("\n");
    sb.append("    tokenEndpoint: ").append(toIndentedString(tokenEndpoint)).append("\n");
    sb.append("    userApiEndpoint: ").append(toIndentedString(userApiEndpoint)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

