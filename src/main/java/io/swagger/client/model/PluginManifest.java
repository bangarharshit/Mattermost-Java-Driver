/*
 * Mattermost API Reference
 * ### API version 4 is stable with the Mattermost server 4.0 release. API version 3 is scheduled for deprecation on January 16th, 2018. [Details here](/#tag/APIv3-Deprecation). Looking for the APIv3 reference? It has moved [here](https://api.mattermost.com/v3). 
 *
 * OpenAPI spec version: 4.0.0
 * Contact: feedback@mattermost.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.PluginManifestBackend;
import io.swagger.client.model.PluginManifestWebapp;
import java.io.IOException;

/**
 * PluginManifest
 */

public class PluginManifest {
  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("version")
  private String version = null;

  @SerializedName("backend")
  private PluginManifestBackend backend = null;

  @SerializedName("webapp")
  private PluginManifestWebapp webapp = null;

  @SerializedName("settings_schema")
  private Object settingsSchema = null;

  public PluginManifest id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Globally unique identifier that represents the plugin.
   * @return id
  **/
  @ApiModelProperty(value = "Globally unique identifier that represents the plugin.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public PluginManifest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the plugin.
   * @return name
  **/
  @ApiModelProperty(value = "Name of the plugin.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PluginManifest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of what the plugin is and does.
   * @return description
  **/
  @ApiModelProperty(value = "Description of what the plugin is and does.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public PluginManifest version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Version number of the plugin.
   * @return version
  **/
  @ApiModelProperty(value = "Version number of the plugin.")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public PluginManifest backend(PluginManifestBackend backend) {
    this.backend = backend;
    return this;
  }

   /**
   * Get backend
   * @return backend
  **/
  @ApiModelProperty(value = "")
  public PluginManifestBackend getBackend() {
    return backend;
  }

  public void setBackend(PluginManifestBackend backend) {
    this.backend = backend;
  }

  public PluginManifest webapp(PluginManifestWebapp webapp) {
    this.webapp = webapp;
    return this;
  }

   /**
   * Get webapp
   * @return webapp
  **/
  @ApiModelProperty(value = "")
  public PluginManifestWebapp getWebapp() {
    return webapp;
  }

  public void setWebapp(PluginManifestWebapp webapp) {
    this.webapp = webapp;
  }

  public PluginManifest settingsSchema(Object settingsSchema) {
    this.settingsSchema = settingsSchema;
    return this;
  }

   /**
   * Settings schema used to define the System Console UI for the plugin.
   * @return settingsSchema
  **/
  @ApiModelProperty(value = "Settings schema used to define the System Console UI for the plugin.")
  public Object getSettingsSchema() {
    return settingsSchema;
  }

  public void setSettingsSchema(Object settingsSchema) {
    this.settingsSchema = settingsSchema;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PluginManifest pluginManifest = (PluginManifest) o;
    return Objects.equals(this.id, pluginManifest.id) &&
        Objects.equals(this.name, pluginManifest.name) &&
        Objects.equals(this.description, pluginManifest.description) &&
        Objects.equals(this.version, pluginManifest.version) &&
        Objects.equals(this.backend, pluginManifest.backend) &&
        Objects.equals(this.webapp, pluginManifest.webapp) &&
        Objects.equals(this.settingsSchema, pluginManifest.settingsSchema);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, version, backend, webapp, settingsSchema);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PluginManifest {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    backend: ").append(toIndentedString(backend)).append("\n");
    sb.append("    webapp: ").append(toIndentedString(webapp)).append("\n");
    sb.append("    settingsSchema: ").append(toIndentedString(settingsSchema)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

