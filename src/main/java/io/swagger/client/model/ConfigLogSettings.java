/*
 * Mattermost API Reference
 * ### API version 4 is stable with the Mattermost server 4.0 release. API version 3 is scheduled for deprecation on January 16th, 2018. [Details here](/#tag/APIv3-Deprecation). Looking for the APIv3 reference? It has moved [here](https://api.mattermost.com/v3). 
 *
 * OpenAPI spec version: 4.0.0
 * Contact: feedback@mattermost.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ConfigLogSettings
 */

public class ConfigLogSettings {
  @SerializedName("EnableConsole")
  private Boolean enableConsole = null;

  @SerializedName("ConsoleLevel")
  private String consoleLevel = null;

  @SerializedName("EnableFile")
  private Boolean enableFile = null;

  @SerializedName("FileLevel")
  private String fileLevel = null;

  @SerializedName("FileFormat")
  private String fileFormat = null;

  @SerializedName("FileLocation")
  private String fileLocation = null;

  @SerializedName("EnableWebhookDebugging")
  private Boolean enableWebhookDebugging = null;

  @SerializedName("EnableDiagnostics")
  private Boolean enableDiagnostics = null;

  public ConfigLogSettings enableConsole(Boolean enableConsole) {
    this.enableConsole = enableConsole;
    return this;
  }

   /**
   * Get enableConsole
   * @return enableConsole
  **/
  @ApiModelProperty(value = "")
  public Boolean isEnableConsole() {
    return enableConsole;
  }

  public void setEnableConsole(Boolean enableConsole) {
    this.enableConsole = enableConsole;
  }

  public ConfigLogSettings consoleLevel(String consoleLevel) {
    this.consoleLevel = consoleLevel;
    return this;
  }

   /**
   * Get consoleLevel
   * @return consoleLevel
  **/
  @ApiModelProperty(value = "")
  public String getConsoleLevel() {
    return consoleLevel;
  }

  public void setConsoleLevel(String consoleLevel) {
    this.consoleLevel = consoleLevel;
  }

  public ConfigLogSettings enableFile(Boolean enableFile) {
    this.enableFile = enableFile;
    return this;
  }

   /**
   * Get enableFile
   * @return enableFile
  **/
  @ApiModelProperty(value = "")
  public Boolean isEnableFile() {
    return enableFile;
  }

  public void setEnableFile(Boolean enableFile) {
    this.enableFile = enableFile;
  }

  public ConfigLogSettings fileLevel(String fileLevel) {
    this.fileLevel = fileLevel;
    return this;
  }

   /**
   * Get fileLevel
   * @return fileLevel
  **/
  @ApiModelProperty(value = "")
  public String getFileLevel() {
    return fileLevel;
  }

  public void setFileLevel(String fileLevel) {
    this.fileLevel = fileLevel;
  }

  public ConfigLogSettings fileFormat(String fileFormat) {
    this.fileFormat = fileFormat;
    return this;
  }

   /**
   * Get fileFormat
   * @return fileFormat
  **/
  @ApiModelProperty(value = "")
  public String getFileFormat() {
    return fileFormat;
  }

  public void setFileFormat(String fileFormat) {
    this.fileFormat = fileFormat;
  }

  public ConfigLogSettings fileLocation(String fileLocation) {
    this.fileLocation = fileLocation;
    return this;
  }

   /**
   * Get fileLocation
   * @return fileLocation
  **/
  @ApiModelProperty(value = "")
  public String getFileLocation() {
    return fileLocation;
  }

  public void setFileLocation(String fileLocation) {
    this.fileLocation = fileLocation;
  }

  public ConfigLogSettings enableWebhookDebugging(Boolean enableWebhookDebugging) {
    this.enableWebhookDebugging = enableWebhookDebugging;
    return this;
  }

   /**
   * Get enableWebhookDebugging
   * @return enableWebhookDebugging
  **/
  @ApiModelProperty(value = "")
  public Boolean isEnableWebhookDebugging() {
    return enableWebhookDebugging;
  }

  public void setEnableWebhookDebugging(Boolean enableWebhookDebugging) {
    this.enableWebhookDebugging = enableWebhookDebugging;
  }

  public ConfigLogSettings enableDiagnostics(Boolean enableDiagnostics) {
    this.enableDiagnostics = enableDiagnostics;
    return this;
  }

   /**
   * Get enableDiagnostics
   * @return enableDiagnostics
  **/
  @ApiModelProperty(value = "")
  public Boolean isEnableDiagnostics() {
    return enableDiagnostics;
  }

  public void setEnableDiagnostics(Boolean enableDiagnostics) {
    this.enableDiagnostics = enableDiagnostics;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfigLogSettings configLogSettings = (ConfigLogSettings) o;
    return Objects.equals(this.enableConsole, configLogSettings.enableConsole) &&
        Objects.equals(this.consoleLevel, configLogSettings.consoleLevel) &&
        Objects.equals(this.enableFile, configLogSettings.enableFile) &&
        Objects.equals(this.fileLevel, configLogSettings.fileLevel) &&
        Objects.equals(this.fileFormat, configLogSettings.fileFormat) &&
        Objects.equals(this.fileLocation, configLogSettings.fileLocation) &&
        Objects.equals(this.enableWebhookDebugging, configLogSettings.enableWebhookDebugging) &&
        Objects.equals(this.enableDiagnostics, configLogSettings.enableDiagnostics);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enableConsole, consoleLevel, enableFile, fileLevel, fileFormat, fileLocation, enableWebhookDebugging, enableDiagnostics);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfigLogSettings {\n");
    
    sb.append("    enableConsole: ").append(toIndentedString(enableConsole)).append("\n");
    sb.append("    consoleLevel: ").append(toIndentedString(consoleLevel)).append("\n");
    sb.append("    enableFile: ").append(toIndentedString(enableFile)).append("\n");
    sb.append("    fileLevel: ").append(toIndentedString(fileLevel)).append("\n");
    sb.append("    fileFormat: ").append(toIndentedString(fileFormat)).append("\n");
    sb.append("    fileLocation: ").append(toIndentedString(fileLocation)).append("\n");
    sb.append("    enableWebhookDebugging: ").append(toIndentedString(enableWebhookDebugging)).append("\n");
    sb.append("    enableDiagnostics: ").append(toIndentedString(enableDiagnostics)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

