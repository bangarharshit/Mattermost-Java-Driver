/*
 * Mattermost API Reference
 * ### API version 4 is stable with the Mattermost server 4.0 release. API version 3 is scheduled for deprecation on January 16th, 2018. [Details here](/#tag/APIv3-Deprecation). Looking for the APIv3 reference? It has moved [here](https://api.mattermost.com/v3). 
 *
 * OpenAPI spec version: 4.0.0
 * Contact: feedback@mattermost.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InlineResponse2007
 */

public class InlineResponse2007 {
  @SerializedName("token")
  private String token = null;

  @SerializedName("gateway_url")
  private String gatewayUrl = null;

  @SerializedName("stun_uri")
  private String stunUri = null;

  @SerializedName("turn_uri")
  private String turnUri = null;

  @SerializedName("turn_password")
  private String turnPassword = null;

  @SerializedName("turn_username")
  private String turnUsername = null;

  public InlineResponse2007 token(String token) {
    this.token = token;
    return this;
  }

   /**
   * The WebRTC token
   * @return token
  **/
  @ApiModelProperty(value = "The WebRTC token")
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }

  public InlineResponse2007 gatewayUrl(String gatewayUrl) {
    this.gatewayUrl = gatewayUrl;
    return this;
  }

   /**
   * The URL to the gateway server
   * @return gatewayUrl
  **/
  @ApiModelProperty(value = "The URL to the gateway server")
  public String getGatewayUrl() {
    return gatewayUrl;
  }

  public void setGatewayUrl(String gatewayUrl) {
    this.gatewayUrl = gatewayUrl;
  }

  public InlineResponse2007 stunUri(String stunUri) {
    this.stunUri = stunUri;
    return this;
  }

   /**
   * The URI to the STUN server
   * @return stunUri
  **/
  @ApiModelProperty(value = "The URI to the STUN server")
  public String getStunUri() {
    return stunUri;
  }

  public void setStunUri(String stunUri) {
    this.stunUri = stunUri;
  }

  public InlineResponse2007 turnUri(String turnUri) {
    this.turnUri = turnUri;
    return this;
  }

   /**
   * The URI to the TURN server
   * @return turnUri
  **/
  @ApiModelProperty(value = "The URI to the TURN server")
  public String getTurnUri() {
    return turnUri;
  }

  public void setTurnUri(String turnUri) {
    this.turnUri = turnUri;
  }

  public InlineResponse2007 turnPassword(String turnPassword) {
    this.turnPassword = turnPassword;
    return this;
  }

   /**
   * The password to use with the TURN server
   * @return turnPassword
  **/
  @ApiModelProperty(value = "The password to use with the TURN server")
  public String getTurnPassword() {
    return turnPassword;
  }

  public void setTurnPassword(String turnPassword) {
    this.turnPassword = turnPassword;
  }

  public InlineResponse2007 turnUsername(String turnUsername) {
    this.turnUsername = turnUsername;
    return this;
  }

   /**
   * The username to use with the TURN server
   * @return turnUsername
  **/
  @ApiModelProperty(value = "The username to use with the TURN server")
  public String getTurnUsername() {
    return turnUsername;
  }

  public void setTurnUsername(String turnUsername) {
    this.turnUsername = turnUsername;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2007 inlineResponse2007 = (InlineResponse2007) o;
    return Objects.equals(this.token, inlineResponse2007.token) &&
        Objects.equals(this.gatewayUrl, inlineResponse2007.gatewayUrl) &&
        Objects.equals(this.stunUri, inlineResponse2007.stunUri) &&
        Objects.equals(this.turnUri, inlineResponse2007.turnUri) &&
        Objects.equals(this.turnPassword, inlineResponse2007.turnPassword) &&
        Objects.equals(this.turnUsername, inlineResponse2007.turnUsername);
  }

  @Override
  public int hashCode() {
    return Objects.hash(token, gatewayUrl, stunUri, turnUri, turnPassword, turnUsername);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2007 {\n");
    
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    gatewayUrl: ").append(toIndentedString(gatewayUrl)).append("\n");
    sb.append("    stunUri: ").append(toIndentedString(stunUri)).append("\n");
    sb.append("    turnUri: ").append(toIndentedString(turnUri)).append("\n");
    sb.append("    turnPassword: ").append(toIndentedString(turnPassword)).append("\n");
    sb.append("    turnUsername: ").append(toIndentedString(turnUsername)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

